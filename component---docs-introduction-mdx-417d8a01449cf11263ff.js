(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"+riC":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return p}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var a=n("/FXl"),o=n("TjRS");n("aD51");function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/Introduction.mdx"}});var i={_frontmatter:r},l=o.a;function p(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(l,c({},i,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"introduction"},"Introduction"),Object(a.b)("h2",{id:"the-problem"},"The problem"),Object(a.b)("p",null,"There cases when you want to check if a value is a React component. You might even want it to be typeguarded. Checking for React components isn't trivial at all. For example it depends on which JavaScript syntax you're using."),Object(a.b)("h2",{id:"the-solution"},"The solution"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"react-type-check")," checks if the value is some sort of a React component and also tells TypeScript if it is."),Object(a.b)("h2",{id:"getting-started"},"Getting started"),Object(a.b)("p",null,"Install this package as a dependency:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{}),"yarn add react-type-check\n")),Object(a.b)("p",null,"or "),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{}),"npm install --save react-type-check\n")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"NOTE: Make sure to have React version >= 16.8.0 installed as a dependency.")),Object(a.b)("h2",{id:"usage"},"Usage"),Object(a.b)("p",null,"After installing you can use it as follows:"),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-js"}),"// JavaScript\nimport { isReactComponent } from 'react-type-check';\nlet maybeRC = () => <div>I'm a React component</div>;\nif (Math.random() > 0.5) {\n  maybeRC = 'Not RC';\n}\nif (isReactComponent(maybeRC)) {\n  const definitelyRC = maybeRC;\n} else {\n  const notRC = maybeRC;\n}\n")),Object(a.b)("pre",null,Object(a.b)("code",c({parentName:"pre"},{className:"language-tsx"}),"// TypeScript\nimport { isReactComponent } from 'react-type-check';\nlet maybeRC: React.ComponentType | string = () => (\n  <div>I'm a React component</div>\n);\nif (Math.random() > 0.5) {\n  maybeRC = 'Not RC';\n}\nif (isReactComponent(maybeRC)) {\n  const definitelyRC: React.ComponentType = maybeRC;\n} else {\n  const notRC: string = maybeRC;\n}\n")))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/Introduction.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-introduction-mdx-417d8a01449cf11263ff.js.map